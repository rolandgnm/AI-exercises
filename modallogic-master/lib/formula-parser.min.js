/*! formula-parser v1.0.2 by Ross Kirsling (MIT license) */
!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.FormulaParser=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";function d(a,b){var c=a.slice(b.length),d=c.match(/^\s*/)[0];return c.slice(d.length)}function e(a,b){return b.reduce(function(b,c){return b?b:0===a.indexOf(c.symbol)?c:null},null)}function f(a,b){var c=(b.match(/^\w+/)||[])[0];if(!c)return null;var e={};return e[a.variableKey]=c,{json:e,remainder:d(b,c)}}function g(a,b){if("("!==b.charAt(0))return null;var c=j(a,d(b,"("),l);if(")"!==c.remainder.charAt(0))throw new SyntaxError("Invalid formula! Found unmatched parenthesis.");return{json:c.json,remainder:d(c.remainder,")")}}function h(a,b){var c=e(b,a.unaries);if(!c)return null;var f=j(a,d(b,c.symbol),c.precedence),g={};return g[c.key]=f.json,{json:g,remainder:f.remainder}}function i(a,b,c,f){var g=e(b,a.binaries);if(!g||g.precedence<c)return null;var h=g.precedence+("left"===g.associativity?1:0),i=j(a,d(b,g.symbol),h),k={};return k[g.key]=[f,i.json],{json:k,remainder:i.remainder}}function j(a,b,c,d){if(!b.length&&!d)throw new SyntaxError("Invalid formula! Unexpected end of input.");var e=d?{json:d,remainder:b}:h(a,b)||g(a,b)||f(a,b);if(!e)throw new SyntaxError("Invalid formula! Could not find an initial subformula.");var k=i(a,e.remainder,c,e.json);return k?j(a,k.remainder,c,k.json):e}function k(a,b,c){this.variableKey=a||"var",this.unaries=b||[],this.binaries=c||[]}var l=0;k.prototype.parse=function(a){if("string"!=typeof a)throw new SyntaxError("Invalid formula! Found non-string input.");var b=j(this,a.trim(),l);if(b.remainder.length)throw new SyntaxError("Invalid formula! Unexpected continuation of input.");return b.json},b.exports=k},{}]},{},[1])(1)});